version: "3.3"

services:

  cadvisor:
    image: braingamer/cadvisor-arm:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg
    networks:
      - monitoring-network
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - monitoring-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    ports:
      - 9100:9100
    image: prom/node-exporter:latest
    networks:
      - monitoring-network
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    

  prometheus:
    image: prom/prometheus:latest
    networks:
      - monitoring-network
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: prom_conf
        target: /etc/prometheus/prometheus.yml
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

networks:
  monitoring-network:
    driver: overlay
    attachable: true

volumes:
    prometheus: {}
    grafana: {}

configs:
  prom_conf:
    file: ./prometheus/conf/prometheus.yml
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml
